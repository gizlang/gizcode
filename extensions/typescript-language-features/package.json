{
  "activationEvents": [ "onLanguage:javascript", "onLanguage:javascriptreact", "onLanguage:typescript", "onLanguage:typescriptreact", "onLanguage:jsx-tags", "onCommand:typescript.tsserverRequest", "onCommand:_typescript.configurePlugin", "onCommand:_typescript.learnMoreAboutRefactorings", "onCommand:typescript.fileReferences", "onTaskType:typescript", "onLanguage:jsonc", "onWalkthrough:nodejsWelcome" ],
  "aiKey": "0c6ae279ed8443289764825290e4f9e2-1a736e7c-1324-4338-be46-fc2a58ae4d14-7255",
  "author": "vscode",
  "browser": "./dist/browser/extension",
  "capabilities": {
    "untrustedWorkspaces": {
      "description": "%workspaceTrust%",
      "restrictedConfigurations": [ "typescript.tsdk", "typescript.tsserver.pluginPaths", "typescript.npm" ],
      "supported": "limited"
    },
    "virtualWorkspaces": {
      "description": "%virtualWorkspaces%",
      "supported": "limited"
    }
  },
  "categories": [ "Programming Languages" ],
  "contributes": {
    "breakpoints": [ {
      "language": "typescript"
    }, {
      "language": "typescriptreact"
    } ],
    "codeActions": [ {
      "actions": [ {
        "description": "%codeActions.refactor.extract.constant.description%",
        "kind": "refactor.extract.constant",
        "title": "%codeActions.refactor.extract.constant.title%"
      }, {
        "description": "%codeActions.refactor.extract.function.description%",
        "kind": "refactor.extract.function",
        "title": "%codeActions.refactor.extract.function.title%"
      }, {
        "description": "%codeActions.refactor.extract.interface.description%",
        "kind": "refactor.extract.interface",
        "title": "%codeActions.refactor.extract.interface.title%"
      }, {
        "description": "%codeActions.refactor.extract.type.description%",
        "kind": "refactor.extract.type",
        "title": "%codeActions.refactor.extract.type.title%"
      }, {
        "description": "%codeActions.refactor.rewrite.import.description%",
        "kind": "refactor.rewrite.import",
        "title": "%codeActions.refactor.rewrite.import.title%"
      }, {
        "description": "%codeActions.refactor.rewrite.export.description%",
        "kind": "refactor.rewrite.export",
        "title": "%codeActions.refactor.rewrite.export.title%"
      }, {
        "description": "%codeActions.refactor.rewrite.arrow.braces.description%",
        "kind": "refactor.rewrite.arrow.braces",
        "title": "%codeActions.refactor.rewrite.arrow.braces.title%"
      }, {
        "kind": "refactor.rewrite.parameters.toDestructured",
        "title": "%codeActions.refactor.rewrite.parameters.toDestructured.title%"
      }, {
        "description": "%codeActions.refactor.rewrite.property.generateAccessors.description%",
        "kind": "refactor.rewrite.property.generateAccessors",
        "title": "%codeActions.refactor.rewrite.property.generateAccessors.title%"
      }, {
        "description": "%codeActions.refactor.move.newFile.description%",
        "kind": "refactor.move.newFile",
        "title": "%codeActions.refactor.move.newFile.title%"
      }, {
        "kind": "source.organizeImports",
        "title": "%codeActions.source.organizeImports.title%"
      } ],
      "languages": [ "javascript", "javascriptreact", "typescript", "typescriptreact" ]
    } ],
    "commands": [ {
      "category": "TypeScript",
      "command": "typescript.reloadProjects",
      "title": "%reloadProjects.title%"
    }, {
      "category": "JavaScript",
      "command": "javascript.reloadProjects",
      "title": "%reloadProjects.title%"
    }, {
      "category": "TypeScript",
      "command": "typescript.selectTypeScriptVersion",
      "title": "%typescript.selectTypeScriptVersion.title%"
    }, {
      "category": "TypeScript",
      "command": "typescript.goToProjectConfig",
      "title": "%goToProjectConfig.title%"
    }, {
      "category": "JavaScript",
      "command": "javascript.goToProjectConfig",
      "title": "%goToProjectConfig.title%"
    }, {
      "category": "TypeScript",
      "command": "typescript.openTsServerLog",
      "title": "%typescript.openTsServerLog.title%"
    }, {
      "category": "TypeScript",
      "command": "typescript.restartTsServer",
      "title": "%typescript.restartTsServer%"
    }, {
      "category": "TypeScript",
      "command": "typescript.findAllFileReferences",
      "title": "%typescript.findAllFileReferences%"
    }, {
      "category": "TypeScript",
      "command": "typescript.goToSourceDefinition",
      "title": "%typescript.goToSourceDefinition%"
    }, {
      "category": "TypeScript",
      "command": "typescript.sortImports",
      "title": "%typescript.sortImports%"
    }, {
      "category": "JavaScript",
      "command": "javascript.sortImports",
      "title": "%typescript.sortImports%"
    }, {
      "category": "TypeScript",
      "command": "typescript.removeUnusedImports",
      "title": "%typescript.removeUnusedImports%"
    }, {
      "category": "JavaScript",
      "command": "javascript.removeUnusedImports",
      "title": "%typescript.removeUnusedImports%"
    } ],
    "configuration": {
      "order": 20,
      "properties": {
        "javascript.autoClosingTags": {
          "default": true,
          "description": "%typescript.autoClosingTags%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.format.enable": {
          "default": true,
          "description": "%javascript.format.enable%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterCommaDelimiter": {
          "default": true,
          "description": "%format.insertSpaceAfterCommaDelimiter%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterConstructor": {
          "default": false,
          "description": "%format.insertSpaceAfterConstructor%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
          "default": true,
          "description": "%format.insertSpaceAfterFunctionKeywordForAnonymousFunctions%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
          "default": true,
          "description": "%format.insertSpaceAfterKeywordsInControlFlowStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
          "default": true,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
          "default": true,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceAfterSemicolonInForStatements": {
          "default": true,
          "description": "%format.insertSpaceAfterSemicolonInForStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceBeforeAndAfterBinaryOperators": {
          "default": true,
          "description": "%format.insertSpaceBeforeAndAfterBinaryOperators%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.insertSpaceBeforeFunctionParenthesis": {
          "default": false,
          "description": "%format.insertSpaceBeforeFunctionParenthesis%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.placeOpenBraceOnNewLineForControlBlocks": {
          "default": false,
          "description": "%format.placeOpenBraceOnNewLineForControlBlocks%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.placeOpenBraceOnNewLineForFunctions": {
          "default": false,
          "description": "%format.placeOpenBraceOnNewLineForFunctions%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.format.semicolons": {
          "default": "ignore",
          "description": "%format.semicolons%",
          "enum": [ "ignore", "insert", "remove" ],
          "enumDescriptions": [ "%format.semicolons.ignore%", "%format.semicolons.insert%", "%format.semicolons.remove%" ],
          "scope": "resource",
          "type": "string"
        },
        "javascript.implicitProjectConfig.checkJs": {
          "default": false,
          "markdownDeprecationMessage": "%configuration.javascript.checkJs.checkJs.deprecation%",
          "markdownDescription": "%configuration.implicitProjectConfig.checkJs%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.implicitProjectConfig.experimentalDecorators": {
          "default": false,
          "markdownDeprecationMessage": "%configuration.javascript.checkJs.experimentalDecorators.deprecation%",
          "markdownDescription": "%configuration.implicitProjectConfig.experimentalDecorators%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.inlayHints.enumMemberValues.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.enumMemberValues.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.functionLikeReturnTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.functionLikeReturnTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.parameterNames.enabled": {
          "default": "none",
          "enum": [ "none", "literals", "all" ],
          "enumDescriptions": [ "%inlayHints.parameterNames.none%", "%inlayHints.parameterNames.literals%", "%inlayHints.parameterNames.all%" ],
          "markdownDescription": "%configuration.inlayHints.parameterNames.enabled%",
          "scope": "resource",
          "type": "string"
        },
        "javascript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
          "default": true,
          "markdownDescription": "%configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.parameterTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.parameterTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.propertyDeclarationTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.propertyDeclarationTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.variableTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.variableTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
          "default": true,
          "markdownDescription": "%configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.preferGoToSourceDefinition": {
          "default": false,
          "description": "%configuration.preferGoToSourceDefinition%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.preferences.autoImportFileExcludePatterns": {
          "items": {
            "type": "string"
          },
          "markdownDescription": "%typescript.preferences.autoImportFileExcludePatterns%",
          "scope": "resource",
          "type": "array"
        },
        "javascript.preferences.importModuleSpecifier": {
          "default": "shortest",
          "description": "%typescript.preferences.importModuleSpecifier%",
          "enum": [ "shortest", "relative", "non-relative", "project-relative" ],
          "markdownEnumDescriptions": [ "%typescript.preferences.importModuleSpecifier.shortest%", "%typescript.preferences.importModuleSpecifier.relative%", "%typescript.preferences.importModuleSpecifier.nonRelative%", "%typescript.preferences.importModuleSpecifier.projectRelative%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "javascript.preferences.importModuleSpecifierEnding": {
          "default": "auto",
          "description": "%typescript.preferences.importModuleSpecifierEnding%",
          "enum": [ "auto", "minimal", "index", "js" ],
          "enumItemLabels": [ null, null, null, "%typescript.preferences.importModuleSpecifierEnding.label.js%" ],
          "markdownEnumDescriptions": [ "%typescript.preferences.importModuleSpecifierEnding.auto%", "%typescript.preferences.importModuleSpecifierEnding.minimal%", "%typescript.preferences.importModuleSpecifierEnding.index%", "%typescript.preferences.importModuleSpecifierEnding.js%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "javascript.preferences.jsxAttributeCompletionStyle": {
          "default": "auto",
          "description": "%typescript.preferences.jsxAttributeCompletionStyle%",
          "enum": [ "auto", "braces", "none" ],
          "markdownEnumDescriptions": [ "%javascript.preferences.jsxAttributeCompletionStyle.auto%", "%typescript.preferences.jsxAttributeCompletionStyle.braces%", "%typescript.preferences.jsxAttributeCompletionStyle.none%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "javascript.preferences.quoteStyle": {
          "default": "auto",
          "enum": [ "auto", "single", "double" ],
          "markdownDescription": "%typescript.preferences.quoteStyle%",
          "markdownEnumDescriptions": [ "%typescript.preferences.quoteStyle.auto%", "%typescript.preferences.quoteStyle.single%", "%typescript.preferences.quoteStyle.double%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "javascript.preferences.renameMatchingJsxTags": {
          "default": true,
          "description": "%typescript.preferences.renameMatchingJsxTags%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.preferences.renameShorthandProperties": {
          "default": true,
          "deprecationMessage": "%typescript.preferences.renameShorthandProperties.deprecationMessage%",
          "description": "%typescript.preferences.useAliasesForRenames%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.preferences.useAliasesForRenames": {
          "default": true,
          "description": "%typescript.preferences.useAliasesForRenames%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.referencesCodeLens.enabled": {
          "default": false,
          "description": "%javascript.referencesCodeLens.enabled%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.referencesCodeLens.showOnAllFunctions": {
          "default": false,
          "description": "%javascript.referencesCodeLens.showOnAllFunctions%",
          "scope": "window",
          "type": "boolean"
        },
        "javascript.suggest.autoImports": {
          "default": true,
          "description": "%configuration.suggest.autoImports%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.classMemberSnippets.enabled": {
          "default": true,
          "description": "%configuration.suggest.classMemberSnippets.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.completeFunctionCalls": {
          "default": false,
          "description": "%configuration.suggest.completeFunctionCalls%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.completeJSDocs": {
          "default": true,
          "description": "%configuration.suggest.completeJSDocs%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.suggest.enabled": {
          "default": true,
          "description": "%typescript.suggest.enabled%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.suggest.includeAutomaticOptionalChainCompletions": {
          "default": true,
          "description": "%configuration.suggest.includeAutomaticOptionalChainCompletions%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.includeCompletionsForImportStatements": {
          "default": true,
          "description": "%configuration.suggest.includeCompletionsForImportStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.jsdoc.generateReturns": {
          "default": true,
          "markdownDescription": "%configuration.suggest.jsdoc.generateReturns%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "javascript.suggest.names": {
          "default": true,
          "markdownDescription": "%configuration.suggest.names%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggest.paths": {
          "default": true,
          "description": "%configuration.suggest.paths%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.suggestionActions.enabled": {
          "default": true,
          "description": "%javascript.suggestionActions.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "javascript.updateImportsOnFileMove.enabled": {
          "default": "prompt",
          "description": "%typescript.updateImportsOnFileMove.enabled%",
          "enum": [ "prompt", "always", "never" ],
          "markdownEnumDescriptions": [ "%typescript.updateImportsOnFileMove.enabled.prompt%", "%typescript.updateImportsOnFileMove.enabled.always%", "%typescript.updateImportsOnFileMove.enabled.never%" ],
          "scope": "resource",
          "type": "string"
        },
        "javascript.validate.enable": {
          "default": true,
          "description": "%javascript.validate.enable%",
          "scope": "window",
          "type": "boolean"
        },
        "js/ts.implicitProjectConfig.checkJs": {
          "default": false,
          "markdownDescription": "%configuration.implicitProjectConfig.checkJs%",
          "scope": "window",
          "type": "boolean"
        },
        "js/ts.implicitProjectConfig.experimentalDecorators": {
          "default": false,
          "markdownDescription": "%configuration.implicitProjectConfig.experimentalDecorators%",
          "scope": "window",
          "type": "boolean"
        },
        "js/ts.implicitProjectConfig.module": {
          "default": "ESNext",
          "enum": [ "CommonJS", "AMD", "System", "UMD", "ES6", "ES2015", "ES2020", "ESNext", "None", "ES2022", "Node12", "NodeNext" ],
          "markdownDescription": "%configuration.implicitProjectConfig.module%",
          "scope": "window",
          "type": "string"
        },
        "js/ts.implicitProjectConfig.strictFunctionTypes": {
          "default": true,
          "markdownDescription": "%configuration.implicitProjectConfig.strictFunctionTypes%",
          "scope": "window",
          "type": "boolean"
        },
        "js/ts.implicitProjectConfig.strictNullChecks": {
          "default": true,
          "markdownDescription": "%configuration.implicitProjectConfig.strictNullChecks%",
          "scope": "window",
          "type": "boolean"
        },
        "js/ts.implicitProjectConfig.target": {
          "default": "ES2020",
          "enum": [ "ES3", "ES5", "ES6", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ES2021", "ES2022", "ESNext" ],
          "markdownDescription": "%configuration.implicitProjectConfig.target%",
          "scope": "window",
          "type": "string"
        },
        "typescript.autoClosingTags": {
          "default": true,
          "description": "%typescript.autoClosingTags%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.check.npmIsInstalled": {
          "default": true,
          "markdownDescription": "%typescript.check.npmIsInstalled%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.disableAutomaticTypeAcquisition": {
          "default": false,
          "markdownDescription": "%typescript.disableAutomaticTypeAcquisition%",
          "scope": "window",
          "tags": [ "usesOnlineServices" ],
          "type": "boolean"
        },
        "typescript.enablePromptUseWorkspaceTsdk": {
          "default": false,
          "description": "%typescript.enablePromptUseWorkspaceTsdk%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.experimental.tsserver.web.enableProjectWideIntellisense": {
          "default": false,
          "description": "%typescript.experimental.tsserver.web.enableProjectWideIntellisense%",
          "scope": "window",
          "tags": [ "experimental" ],
          "type": "boolean"
        },
        "typescript.format.enable": {
          "default": true,
          "description": "%typescript.format.enable%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.format.indentSwitchCase": {
          "default": true,
          "description": "%format.indentSwitchCase%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterCommaDelimiter": {
          "default": true,
          "description": "%format.insertSpaceAfterCommaDelimiter%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterConstructor": {
          "default": false,
          "description": "%format.insertSpaceAfterConstructor%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterFunctionKeywordForAnonymousFunctions": {
          "default": true,
          "description": "%format.insertSpaceAfterFunctionKeywordForAnonymousFunctions%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterKeywordsInControlFlowStatements": {
          "default": true,
          "description": "%format.insertSpaceAfterKeywordsInControlFlowStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces": {
          "default": true,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingEmptyBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingJsxExpressionBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces": {
          "default": true,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyBrackets%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingNonemptyParenthesis%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces": {
          "default": false,
          "description": "%format.insertSpaceAfterOpeningAndBeforeClosingTemplateStringBraces%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterSemicolonInForStatements": {
          "default": true,
          "description": "%format.insertSpaceAfterSemicolonInForStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceAfterTypeAssertion": {
          "default": false,
          "description": "%format.insertSpaceAfterTypeAssertion%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceBeforeAndAfterBinaryOperators": {
          "default": true,
          "description": "%format.insertSpaceBeforeAndAfterBinaryOperators%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.insertSpaceBeforeFunctionParenthesis": {
          "default": false,
          "description": "%format.insertSpaceBeforeFunctionParenthesis%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.placeOpenBraceOnNewLineForControlBlocks": {
          "default": false,
          "description": "%format.placeOpenBraceOnNewLineForControlBlocks%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.placeOpenBraceOnNewLineForFunctions": {
          "default": false,
          "description": "%format.placeOpenBraceOnNewLineForFunctions%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.format.semicolons": {
          "default": "ignore",
          "description": "%format.semicolons%",
          "enum": [ "ignore", "insert", "remove" ],
          "enumDescriptions": [ "%format.semicolons.ignore%", "%format.semicolons.insert%", "%format.semicolons.remove%" ],
          "scope": "resource",
          "type": "string"
        },
        "typescript.implementationsCodeLens.enabled": {
          "default": false,
          "description": "%typescript.implementationsCodeLens.enabled%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.inlayHints.enumMemberValues.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.enumMemberValues.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.functionLikeReturnTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.functionLikeReturnTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.parameterNames.enabled": {
          "default": "none",
          "enum": [ "none", "literals", "all" ],
          "enumDescriptions": [ "%inlayHints.parameterNames.none%", "%inlayHints.parameterNames.literals%", "%inlayHints.parameterNames.all%" ],
          "markdownDescription": "%configuration.inlayHints.parameterNames.enabled%",
          "scope": "resource",
          "type": "string"
        },
        "typescript.inlayHints.parameterNames.suppressWhenArgumentMatchesName": {
          "default": true,
          "markdownDescription": "%configuration.inlayHints.parameterNames.suppressWhenArgumentMatchesName%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.parameterTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.parameterTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.propertyDeclarationTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.propertyDeclarationTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.variableTypes.enabled": {
          "default": false,
          "markdownDescription": "%configuration.inlayHints.variableTypes.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.inlayHints.variableTypes.suppressWhenTypeMatchesName": {
          "default": true,
          "markdownDescription": "%configuration.inlayHints.variableTypes.suppressWhenTypeMatchesName%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.locale": {
          "default": "auto",
          "enum": [ "auto", "de", "es", "en", "fr", "it", "ja", "ko", "ru", "zh-CN", "zh-TW" ],
          "markdownDescription": "%typescript.locale%",
          "scope": "window",
          "type": "string"
        },
        "typescript.npm": {
          "markdownDescription": "%typescript.npm%",
          "scope": "machine",
          "type": "string"
        },
        "typescript.preferGoToSourceDefinition": {
          "default": false,
          "description": "%configuration.preferGoToSourceDefinition%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.preferences.autoImportFileExcludePatterns": {
          "items": {
            "type": "string"
          },
          "markdownDescription": "%typescript.preferences.autoImportFileExcludePatterns%",
          "scope": "resource",
          "type": "array"
        },
        "typescript.preferences.importModuleSpecifier": {
          "default": "shortest",
          "description": "%typescript.preferences.importModuleSpecifier%",
          "enum": [ "shortest", "relative", "non-relative", "project-relative" ],
          "markdownEnumDescriptions": [ "%typescript.preferences.importModuleSpecifier.shortest%", "%typescript.preferences.importModuleSpecifier.relative%", "%typescript.preferences.importModuleSpecifier.nonRelative%", "%typescript.preferences.importModuleSpecifier.projectRelative%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "typescript.preferences.importModuleSpecifierEnding": {
          "default": "auto",
          "description": "%typescript.preferences.importModuleSpecifierEnding%",
          "enum": [ "auto", "minimal", "index", "js" ],
          "enumItemLabels": [ null, null, null, "%typescript.preferences.importModuleSpecifierEnding.label.js%" ],
          "markdownEnumDescriptions": [ "%typescript.preferences.importModuleSpecifierEnding.auto%", "%typescript.preferences.importModuleSpecifierEnding.minimal%", "%typescript.preferences.importModuleSpecifierEnding.index%", "%typescript.preferences.importModuleSpecifierEnding.js%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "typescript.preferences.includePackageJsonAutoImports": {
          "default": "auto",
          "enum": [ "auto", "on", "off" ],
          "enumDescriptions": [ "%typescript.preferences.includePackageJsonAutoImports.auto%", "%typescript.preferences.includePackageJsonAutoImports.on%", "%typescript.preferences.includePackageJsonAutoImports.off%" ],
          "markdownDescription": "%typescript.preferences.includePackageJsonAutoImports%",
          "scope": "window",
          "type": "string"
        },
        "typescript.preferences.jsxAttributeCompletionStyle": {
          "default": "auto",
          "description": "%typescript.preferences.jsxAttributeCompletionStyle%",
          "enum": [ "auto", "braces", "none" ],
          "markdownEnumDescriptions": [ "%typescript.preferences.jsxAttributeCompletionStyle.auto%", "%typescript.preferences.jsxAttributeCompletionStyle.braces%", "%typescript.preferences.jsxAttributeCompletionStyle.none%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "typescript.preferences.quoteStyle": {
          "default": "auto",
          "enum": [ "auto", "single", "double" ],
          "markdownDescription": "%typescript.preferences.quoteStyle%",
          "markdownEnumDescriptions": [ "%typescript.preferences.quoteStyle.auto%", "%typescript.preferences.quoteStyle.single%", "%typescript.preferences.quoteStyle.double%" ],
          "scope": "language-overridable",
          "type": "string"
        },
        "typescript.preferences.renameMatchingJsxTags": {
          "default": true,
          "description": "%typescript.preferences.renameMatchingJsxTags%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.preferences.renameShorthandProperties": {
          "default": true,
          "deprecationMessage": "%typescript.preferences.renameShorthandProperties.deprecationMessage%",
          "description": "%typescript.preferences.useAliasesForRenames%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.preferences.useAliasesForRenames": {
          "default": true,
          "description": "%typescript.preferences.useAliasesForRenames%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.referencesCodeLens.enabled": {
          "default": false,
          "description": "%typescript.referencesCodeLens.enabled%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.referencesCodeLens.showOnAllFunctions": {
          "default": false,
          "description": "%typescript.referencesCodeLens.showOnAllFunctions%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.reportStyleChecksAsWarnings": {
          "default": true,
          "description": "%typescript.reportStyleChecksAsWarnings%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.suggest.autoImports": {
          "default": true,
          "description": "%configuration.suggest.autoImports%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.classMemberSnippets.enabled": {
          "default": true,
          "description": "%configuration.suggest.classMemberSnippets.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.completeFunctionCalls": {
          "default": false,
          "description": "%configuration.suggest.completeFunctionCalls%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.completeJSDocs": {
          "default": true,
          "description": "%configuration.suggest.completeJSDocs%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.suggest.enabled": {
          "default": true,
          "description": "%typescript.suggest.enabled%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.suggest.includeAutomaticOptionalChainCompletions": {
          "default": true,
          "description": "%configuration.suggest.includeAutomaticOptionalChainCompletions%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.includeCompletionsForImportStatements": {
          "default": true,
          "description": "%configuration.suggest.includeCompletionsForImportStatements%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.jsdoc.generateReturns": {
          "default": true,
          "markdownDescription": "%configuration.suggest.jsdoc.generateReturns%",
          "scope": "language-overridable",
          "type": "boolean"
        },
        "typescript.suggest.objectLiteralMethodSnippets.enabled": {
          "default": true,
          "description": "%configuration.suggest.objectLiteralMethodSnippets.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggest.paths": {
          "default": true,
          "description": "%configuration.suggest.paths%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.suggestionActions.enabled": {
          "default": true,
          "description": "%typescript.suggestionActions.enabled%",
          "scope": "resource",
          "type": "boolean"
        },
        "typescript.surveys.enabled": {
          "default": true,
          "description": "%configuration.surveys.enabled%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.tsc.autoDetect": {
          "default": "on",
          "description": "%typescript.tsc.autoDetect%",
          "enum": [ "on", "off", "build", "watch" ],
          "markdownEnumDescriptions": [ "%typescript.tsc.autoDetect.on%", "%typescript.tsc.autoDetect.off%", "%typescript.tsc.autoDetect.build%", "%typescript.tsc.autoDetect.watch%" ],
          "scope": "window",
          "type": "string"
        },
        "typescript.tsdk": {
          "markdownDescription": "%typescript.tsdk.desc%",
          "scope": "window",
          "type": "string"
        },
        "typescript.tsserver.enableTracing": {
          "default": false,
          "description": "%typescript.tsserver.enableTracing%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.tsserver.experimental.enableProjectDiagnostics": {
          "default": false,
          "description": "%configuration.tsserver.experimental.enableProjectDiagnostics%",
          "scope": "window",
          "tags": [ "experimental" ],
          "type": "boolean"
        },
        "typescript.tsserver.log": {
          "default": "off",
          "description": "%typescript.tsserver.log%",
          "enum": [ "off", "terse", "normal", "verbose" ],
          "scope": "window",
          "type": "string"
        },
        "typescript.tsserver.maxTsServerMemory": {
          "default": 3072,
          "description": "%configuration.tsserver.maxTsServerMemory%",
          "scope": "window",
          "type": "number"
        },
        "typescript.tsserver.pluginPaths": {
          "default": [ ],
          "description": "%typescript.tsserver.pluginPaths%",
          "items": {
            "description": "%typescript.tsserver.pluginPaths.item%",
            "type": "string"
          },
          "scope": "machine",
          "type": "array"
        },
        "typescript.tsserver.useSeparateSyntaxServer": {
          "default": true,
          "description": "%configuration.tsserver.useSeparateSyntaxServer%",
          "markdownDeprecationMessage": "%configuration.tsserver.useSeparateSyntaxServer.deprecation%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.tsserver.useSyntaxServer": {
          "default": "auto",
          "description": "%configuration.tsserver.useSyntaxServer%",
          "enum": [ "always", "never", "auto" ],
          "enumDescriptions": [ "%configuration.tsserver.useSyntaxServer.always%", "%configuration.tsserver.useSyntaxServer.never%", "%configuration.tsserver.useSyntaxServer.auto%" ],
          "scope": "window",
          "type": "string"
        },
        "typescript.tsserver.watchOptions": {
          "description": "%configuration.tsserver.watchOptions%",
          "properties": {
            "fallbackPolling": {
              "description": "%configuration.tsserver.watchOptions.fallbackPolling%",
              "enum": [ "fixedPollingInterval", "priorityPollingInterval", "dynamicPriorityPolling" ],
              "enumDescriptions": [ "configuration.tsserver.watchOptions.fallbackPolling.fixedPollingInterval", "configuration.tsserver.watchOptions.fallbackPolling.priorityPollingInterval", "configuration.tsserver.watchOptions.fallbackPolling.dynamicPriorityPolling" ],
              "type": "string"
            },
            "synchronousWatchDirectory": {
              "description": "%configuration.tsserver.watchOptions.synchronousWatchDirectory%",
              "type": "boolean"
            },
            "watchDirectory": {
              "default": "useFsEvents",
              "description": "%configuration.tsserver.watchOptions.watchDirectory%",
              "enum": [ "fixedChunkSizePolling", "fixedPollingInterval", "dynamicPriorityPolling", "useFsEvents" ],
              "enumDescriptions": [ "%configuration.tsserver.watchOptions.watchDirectory.fixedChunkSizePolling%", "%configuration.tsserver.watchOptions.watchDirectory.fixedPollingInterval%", "%configuration.tsserver.watchOptions.watchDirectory.dynamicPriorityPolling%", "%configuration.tsserver.watchOptions.watchDirectory.useFsEvents%" ],
              "type": "string"
            },
            "watchFile": {
              "default": "useFsEvents",
              "description": "%configuration.tsserver.watchOptions.watchFile%",
              "enum": [ "fixedChunkSizePolling", "fixedPollingInterval", "priorityPollingInterval", "dynamicPriorityPolling", "useFsEvents", "useFsEventsOnParentDirectory" ],
              "enumDescriptions": [ "%configuration.tsserver.watchOptions.watchFile.fixedChunkSizePolling%", "%configuration.tsserver.watchOptions.watchFile.fixedPollingInterval%", "%configuration.tsserver.watchOptions.watchFile.priorityPollingInterval%", "%configuration.tsserver.watchOptions.watchFile.dynamicPriorityPolling%", "%configuration.tsserver.watchOptions.watchFile.useFsEvents%", "%configuration.tsserver.watchOptions.watchFile.useFsEventsOnParentDirectory%" ],
              "type": "string"
            }
          },
          "scope": "window",
          "type": "object"
        },
        "typescript.updateImportsOnFileMove.enabled": {
          "default": "prompt",
          "description": "%typescript.updateImportsOnFileMove.enabled%",
          "enum": [ "prompt", "always", "never" ],
          "markdownEnumDescriptions": [ "%typescript.updateImportsOnFileMove.enabled.prompt%", "%typescript.updateImportsOnFileMove.enabled.always%", "%typescript.updateImportsOnFileMove.enabled.never%" ],
          "scope": "resource",
          "type": "string"
        },
        "typescript.validate.enable": {
          "default": true,
          "description": "%typescript.validate.enable%",
          "scope": "window",
          "type": "boolean"
        },
        "typescript.workspaceSymbols.scope": {
          "default": "allOpenProjects",
          "enum": [ "allOpenProjects", "currentProject" ],
          "enumDescriptions": [ "%typescript.workspaceSymbols.scope.allOpenProjects%", "%typescript.workspaceSymbols.scope.currentProject%" ],
          "markdownDescription": "%typescript.workspaceSymbols.scope%",
          "scope": "window",
          "type": "string"
        }
      },
      "title": "%configuration.typescript%",
      "type": "object"
    },
    "jsonValidation": [ {
      "fileMatch": "package.json",
      "url": "./schemas/package.schema.json"
    }, {
      "fileMatch": "tsconfig.json",
      "url": "https://json.schemastore.org/tsconfig"
    }, {
      "fileMatch": "tsconfig.json",
      "url": "./schemas/tsconfig.schema.json"
    }, {
      "fileMatch": "tsconfig.*.json",
      "url": "https://json.schemastore.org/tsconfig"
    }, {
      "fileMatch": "tsconfig-*.json",
      "url": "./schemas/tsconfig.schema.json"
    }, {
      "fileMatch": "tsconfig-*.json",
      "url": "https://json.schemastore.org/tsconfig"
    }, {
      "fileMatch": "tsconfig.*.json",
      "url": "./schemas/tsconfig.schema.json"
    }, {
      "fileMatch": "typings.json",
      "url": "https://json.schemastore.org/typings"
    }, {
      "fileMatch": ".bowerrc",
      "url": "https://json.schemastore.org/bowerrc"
    }, {
      "fileMatch": ".babelrc",
      "url": "https://json.schemastore.org/babelrc"
    }, {
      "fileMatch": ".babelrc.json",
      "url": "https://json.schemastore.org/babelrc"
    }, {
      "fileMatch": "babel.config.json",
      "url": "https://json.schemastore.org/babelrc"
    }, {
      "fileMatch": "jsconfig.json",
      "url": "https://json.schemastore.org/jsconfig"
    }, {
      "fileMatch": "jsconfig.json",
      "url": "./schemas/jsconfig.schema.json"
    }, {
      "fileMatch": "jsconfig.*.json",
      "url": "https://json.schemastore.org/jsconfig"
    }, {
      "fileMatch": "jsconfig.*.json",
      "url": "./schemas/jsconfig.schema.json"
    }, {
      "fileMatch": "typedoc.json",
      "url": "https://typedoc.org/schema.json"
    } ],
    "menus": {
      "commandPalette": [ {
        "command": "typescript.reloadProjects",
        "when": "editorLangId == typescript && typescript.isManagedFile"
      }, {
        "command": "typescript.reloadProjects",
        "when": "editorLangId == typescriptreact && typescript.isManagedFile"
      }, {
        "command": "javascript.reloadProjects",
        "when": "editorLangId == javascript && typescript.isManagedFile"
      }, {
        "command": "javascript.reloadProjects",
        "when": "editorLangId == javascriptreact && typescript.isManagedFile"
      }, {
        "command": "typescript.goToProjectConfig",
        "when": "editorLangId == typescript && typescript.isManagedFile"
      }, {
        "command": "typescript.goToProjectConfig",
        "when": "editorLangId == typescriptreact"
      }, {
        "command": "javascript.goToProjectConfig",
        "when": "editorLangId == javascript && typescript.isManagedFile"
      }, {
        "command": "javascript.goToProjectConfig",
        "when": "editorLangId == javascriptreact && typescript.isManagedFile"
      }, {
        "command": "typescript.selectTypeScriptVersion",
        "when": "typescript.isManagedFile"
      }, {
        "command": "typescript.openTsServerLog",
        "when": "typescript.isManagedFile"
      }, {
        "command": "typescript.restartTsServer",
        "when": "typescript.isManagedFile"
      }, {
        "command": "typescript.findAllFileReferences",
        "when": "tsSupportsFileReferences && typescript.isManagedFile"
      }, {
        "command": "typescript.goToSourceDefinition",
        "when": "tsSupportsSourceDefinition && typescript.isManagedFile"
      }, {
        "command": "typescript.sortImports",
        "when": "supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^typescript(react)?$/"
      }, {
        "command": "javascript.sortImports",
        "when": "supportedCodeAction =~ /(\\s|^)source\\.sortImports\\b/ && editorLangId =~ /^javascript(react)?$/"
      }, {
        "command": "typescript.removeUnusedImports",
        "when": "supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^typescript(react)?$/"
      }, {
        "command": "javascript.removeUnusedImports",
        "when": "supportedCodeAction =~ /(\\s|^)source\\.removeUnusedImports\\b/ && editorLangId =~ /^javascript(react)?$/"
      } ],
      "editor/context": [ {
        "command": "typescript.goToSourceDefinition",
        "group": "navigation@9",
        "when": "tsSupportsSourceDefinition && resourceLangId == typescript"
      }, {
        "command": "typescript.goToSourceDefinition",
        "group": "navigation@9",
        "when": "tsSupportsSourceDefinition && resourceLangId == typescriptreact"
      }, {
        "command": "typescript.goToSourceDefinition",
        "group": "navigation@9",
        "when": "tsSupportsSourceDefinition && resourceLangId == javascript"
      }, {
        "command": "typescript.goToSourceDefinition",
        "group": "navigation@9",
        "when": "tsSupportsSourceDefinition && resourceLangId == javascriptreact"
      } ],
      "editor/title/context": [ {
        "command": "typescript.findAllFileReferences",
        "when": "tsSupportsFileReferences && resourceLangId == javascript"
      }, {
        "command": "typescript.findAllFileReferences",
        "when": "tsSupportsFileReferences && resourceLangId == javascriptreact"
      }, {
        "command": "typescript.findAllFileReferences",
        "when": "tsSupportsFileReferences && resourceLangId == typescript"
      }, {
        "command": "typescript.findAllFileReferences",
        "when": "tsSupportsFileReferences && resourceLangId == typescriptreact"
      } ],
      "explorer/context": [ {
        "command": "typescript.findAllFileReferences",
        "group": "4_search",
        "when": "tsSupportsFileReferences && resourceLangId == typescript"
      }, {
        "command": "typescript.findAllFileReferences",
        "group": "4_search",
        "when": "tsSupportsFileReferences && resourceLangId == typescriptreact"
      }, {
        "command": "typescript.findAllFileReferences",
        "group": "4_search",
        "when": "tsSupportsFileReferences && resourceLangId == javascript"
      }, {
        "command": "typescript.findAllFileReferences",
        "group": "4_search",
        "when": "tsSupportsFileReferences && resourceLangId == javascriptreact"
      } ]
    },
    "problemMatchers": [ {
      "applyTo": "closedDocuments",
      "fileLocation": [ "relative", "${cwd}" ],
      "label": "%typescript.problemMatchers.tsc.label%",
      "name": "tsc",
      "owner": "typescript",
      "pattern": "$tsc",
      "source": "ts"
    }, {
      "applyTo": "closedDocuments",
      "background": {
        "activeOnStart": true,
        "beginsPattern": {
          "regexp": "^\\s*(?:message TS6032:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (Starting compilation in watch mode|File change detected\\. Starting incremental compilation)\\.\\.\\."
        },
        "endsPattern": {
          "regexp": "^\\s*(?:message TS6042:|\\[?\\D*.{1,2}[:.].{1,2}[:.].{1,2}\\D*(├\\D*\\d{1,2}\\D+┤)?(?:\\]| -)) (?:Compilation complete\\.|Found \\d+ errors?\\.) Watching for file changes\\."
        }
      },
      "fileLocation": [ "relative", "${cwd}" ],
      "label": "%typescript.problemMatchers.tscWatch.label%",
      "name": "tsc-watch",
      "owner": "typescript",
      "pattern": "$tsc",
      "source": "ts"
    } ],
    "problemPatterns": [ {
      "code": 5,
      "column": 3,
      "file": 1,
      "line": 2,
      "message": 6,
      "name": "tsc",
      "regexp": "^([^\\s].*)[\\(:](\\d+)[,:](\\d+)(?:\\):\\s+|\\s+-\\s+)(error|warning|info)\\s+TS(\\d+)\\s*:\\s*(.*)$",
      "severity": 4
    } ],
    "taskDefinitions": [ {
      "properties": {
        "option": {
          "type": "string"
        },
        "tsconfig": {
          "description": "%taskDefinition.tsconfig.description%",
          "type": "string"
        }
      },
      "required": [ "tsconfig" ],
      "type": "typescript",
      "when": "shellExecutionSupported"
    } ]
  },
  "dependencies": {
    "@vscode/extension-telemetry": "0.8.5",
    "@vscode/sync-api-client": "^0.7.2",
    "@vscode/sync-api-common": "^0.7.2",
    "@vscode/sync-api-service": "^0.8.1",
    "jsonc-parser": "^3.2.0",
    "semver": "7.5.2",
    "vscode-tas-client": "^0.1.75",
    "vscode-uri": "^3.0.3"
  },
  "description": "%description%",
  "devDependencies": {
    "@types/node": "16.x",
    "@types/semver": "^5.5.0"
  },
  "displayName": "%displayName%",
  "enabledApiProposals": [ "workspaceTrust" ],
  "engines": {
    "vscode": "^1.30.0"
  },
  "icon": "media/icon.png",
  "license": "MIT",
  "main": "./out/extension",
  "name": "typescript-language-features",
  "publisher": "vscode",
  "repository": {
    "type": "git",
    "url": "https://github.com/microsoft/vscode.git"
  },
  "scripts": {
    "compile-web": "npx webpack-cli --config extension-browser.webpack.config --mode none",
    "vscode:prepublish": "node ../../node_modules/gulp/bin/gulp.js --gulpfile ../../build/gulpfile.extensions.js compile-extension:typescript-language-features",
    "watch-web": "npx webpack-cli --config extension-browser.webpack.config --mode none --watch --info-verbosity verbose"
  },
  "version": "1.0.0"
}